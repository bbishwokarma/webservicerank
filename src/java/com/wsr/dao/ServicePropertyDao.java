/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.wsr.dao;

import com.wsr.dto.*;
import com.wsr.exceptions.*;

public interface ServicePropertyDao
{
	/** 
	 * Inserts a new row in the service_property table.
	 */
	public ServicePropertyPk insert(ServiceProperty dto) throws ServicePropertyDaoException;

	/** 
	 * Updates a single row in the service_property table.
	 */
	public void update(ServicePropertyPk pk, ServiceProperty dto) throws ServicePropertyDaoException;

	/** 
	 * Deletes a single row in the service_property table.
	 */
	public void delete(ServicePropertyPk pk) throws ServicePropertyDaoException;

	/** 
	 * Returns the rows from the service_property table that matches the specified primary-key value.
	 */
	public ServiceProperty findByPrimaryKey(ServicePropertyPk pk) throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the criteria 'SP_ID = :spId'.
	 */
	public ServiceProperty findByPrimaryKey(int spId) throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the criteria ''.
	 */
	public ServiceProperty[] findAll() throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the criteria 'SP_ID = :spId'.
	 */
	public ServiceProperty[] findWhereSpIdEquals(int spId) throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the criteria 'service_ID = :serviceId'.
	 */
	public ServiceProperty[] findWhereServiceIdEquals(int serviceId) throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the criteria 'property_ID = :propertyId'.
	 */
	public ServiceProperty[] findWherePropertyIdEquals(int propertyId) throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the criteria 'property_category = :propertyCategory'.
	 */
	public ServiceProperty[] findWherePropertyCategoryEquals(int propertyCategory) throws ServicePropertyDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the service_property table that match the specified arbitrary SQL statement
	 */
	public ServiceProperty[] findByDynamicSelect(String sql, Object[] sqlParams) throws ServicePropertyDaoException;

	/** 
	 * Returns all rows from the service_property table that match the specified arbitrary SQL statement
	 */
	public ServiceProperty[] findByDynamicWhere(String sql, Object[] sqlParams) throws ServicePropertyDaoException;

}
